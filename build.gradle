plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}


repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }

    maven { url "https://maven.shedaniel.me/" }

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
}

loom {
    accessWidenerPath = file("src/main/resources/maxima.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include(implementation 'org.json:json:20240303')

    modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    include(modApi("me.shedaniel.cloth:cloth-config-fabric:15.0.130") {
        exclude(group: "net.fabricmc.fabric-api")
    })

    modImplementation "maven.modrinth:lithium:mc1.21.1-0.13.0"
}

processResources {
    inputs.property "version", project.version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    java.withSourcesJar()

    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}